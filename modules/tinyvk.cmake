

function(tinyvk_set_msvc_runtime_lib TARGET)
    if (WIN32)
        set(LIB_NAME "MultiThreaded$<$<CONFIG:Debug>:Debug>")
        if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
            set(LIB_NAME ${LIB_NAME}DLL)
        endif()
        set_property(TARGET ${TARGET} PROPERTY MSVC_RUNTIME_LIBRARY ${LIB_NAME})
    endif()
endfunction()


function(tinyvk_link_shader_lib TARGET NAME)
    if (WIN32)
        if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
            set(NAME ${NAME}d)
        endif()
        set(LIB_PATH "$ENV{VULKAN_SDK}/lib/${NAME}.lib")
        if (NOT EXISTS "${LIB_PATH}")
            message(FATAL_ERROR "Cannot find ${NAME}.lib to link, did you set the VULKAN_SDK environment variable?")
        endif()
        target_link_libraries(${TARGET} PRIVATE "${LIB_PATH}")
        tinyvk_set_msvc_runtime_lib(${TARGET})
    else()
        if (NOT EXISTS "$ENV{VULKAN_SDK}/lib/lib${NAME}.a")
            message(FATAL_ERROR "Cannot find lib${NAME}.a to link, did you set the VULKAN_SDK environment variable?")
        endif()
        target_link_libraries(${TARGET} PRIVATE pthread $ENV{VULKAN_SDK}/lib/lib${NAME}.a)
    endif()
    file(TO_CMAKE_PATH "$ENV{VULKAN_SDK}" VSDK)
    target_compile_definitions(${TARGET} PRIVATE VULKAN_SDK_PATH="${VSDK}")
endfunction()


function(tinyvk_link_shaderc TARGET)
    tinyvk_link_shader_lib(${TARGET} "shaderc_combined")
endfunction()

function(tinyvk_link_spirv_cross TARGET)
    tinyvk_link_shader_lib(${TARGET} "spirv-cross-core")
endfunction()
